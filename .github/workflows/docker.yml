name: Build Docker Image

on:
  push:
    branches:
      - master
  pull_request:

  # Allow for manually running
  workflow_dispatch:
    inputs:
      container_tag:
        description: Tag for container
        default: "latest"
        required: true

permissions:
  contents: read
  packages: write
  attestations: write
  id-token: write

jobs:
  lint:
    uses: "./.github/workflows/_lint.yml"

  build:
    uses: "./.github/workflows/_build.yml"

  test:
    uses: "./.github/workflows/_test.yml"

  build_image:
    name: Build and publish Docker image

    needs: [ "lint", "build", "test" ]

    runs-on: ubuntu-latest

    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}

    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
        base_image:
          - gcr.io/distroless/static-debian12:nonroot
          - alpine:latest
        # Publish the 'latest' tag as nonroot
        include:
          - base_image: gcr.io/distroless/static-debian12:nonroot
            tag: 'debian12'
          - base_image: alpine:latest
            tag: 'alpine'


    steps:
      - uses: actions/checkout@v4

      - name: Set dynamic variables
        id: vars
        run: |
          echo "${{ github.event.pull_request.head.ref || github.ref }}" | sed -r 's#^refs/(heads|tags)/##' >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # Tag images based on the 'include' section (i.e. wireproxy-latest, wireproxy-alpine)
          # also tag debain12 base as 'latest' if we're pushing to the default branch (master)
          tags: |
            type=raw,value=${{ matrix.tag }}
            type=raw,value=latest,enable=${{ github.event_name == 'push' && matrix.tag == 'debian12' }}
          labels: |
            org.opencontainers.image.documentation=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.vendor=${{ github.repository_owner }}
            org.opencontainers.image.ref.name=${{ steps.vars.outputs.REF_NAME }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          # Only push to registry if this is a push event (not pull_request)
          push: ${{ github.event_name == 'push' }}
          platforms: ${{ matrix.platform }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            DISTROBASE=${{ matrix.base_image }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          # Only push attestation if this is a push event (not pull_request)
          push-to-registry: ${{ github.event_name == 'push' }}
